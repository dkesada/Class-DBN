% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NNDBN.R
\name{NNDBN}
\alias{NNDBN}
\title{R6 class that defines the NN + DBN model}
\arguments{
\item{lower}{lower bounds of the learning rate, epochs, batch size}

\item{upper}{upper bounds of the learning rate, epochs, batch size}

\item{itermax}{maximum number of iterations of the optimization process}

\item{test_per}{percentage of instances assigned as test in the optimization}

\item{optim_trace}{whether or not to print the progress of each optimization iteration}

\item{horizon}{integer value that defines the lenght of the forecasting with the DBN model}

\item{dt_test}{a data.table with the test dataset}

\item{print_res}{a boolean that determines whether or not should the results of the prediction be printed}

\item{conf_mat}{a boolean that determines whether or not should a confusion matrix be printed}

\item{dt_train}{a data.table with the training dataset}

\item{optim}{boolean that determines whether or not the NN parameters should be optimized}

\item{cl_params}{vector with the parameters of the NN c(learn_rate, epochs, batch_size)}
}
\value{
the prediction result vector

the prediction result vector
}
\description{
Initialize the object with some modifiable parameters of the optimization

Predict the objective variable in all the rows in a dataset with the 
SVM augmented by the DBN forecasting. The horizon sets the length of 
the forecasting with the DBN model.

Predict the objective variable in all the rows in a dataset using only
the SVM model.

Fit the internal NN
}
\details{
The model is defined as a DBN model that forecasts the state of a time-series
based system and a neural network model that classifies that predicted state.
}
